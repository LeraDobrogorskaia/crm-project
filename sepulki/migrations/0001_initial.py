# Generated by Django 5.0 on 2023-12-10 09:10

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', max_length=250, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, help_text='If the property is inactive, then user can not to create sepulka with it.', verbose_name='is active')),
                ('hex', models.CharField(help_text='Color hex code in #000 or #000000 formats.', max_length=7, unique=True, validators=[django.core.validators.RegexValidator('^#(?:[0-9a-fA-F]{3}){1,2}$')], verbose_name='hex code')),
            ],
            options={
                'verbose_name': 'color',
                'verbose_name_plural': 'color',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', max_length=250, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, help_text='If the property is inactive, then user can not to create sepulka with it.', verbose_name='is active')),
                ('density', models.PositiveIntegerField(verbose_name='density in kg/m3 units')),
                ('cost', models.PositiveIntegerField(verbose_name='cost in money/kg units')),
            ],
            options={
                'verbose_name': 'material',
                'verbose_name_plural': 'materials',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', max_length=250, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, help_text='If the property is inactive, then user can not to create sepulka with it.', verbose_name='is active')),
                ('volume', models.PositiveIntegerField(verbose_name='volume in m3 units')),
            ],
            options={
                'verbose_name': 'size',
                'verbose_name_plural': 'sizes',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'pending manager decision'), ('in_process', 'in process by picker'), ('in_stock', 'pending deliveryman'), ('in_delivery', 'in delivery by deliveryman'), ('delivered', 'delivered to client')], default='pending', max_length=15, verbose_name='status')),
                ('is_rejected', models.BooleanField(default=False, help_text='The order can be rejected by the manager.', verbose_name='is rejected')),
                ('reject_message', models.TextField(blank=True, default=True, help_text='Must be specified if the order is rejected by the manager.', max_length=250, verbose_name='reject message')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified date')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='client')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sepulki.color', verbose_name='color')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sepulki.material', verbose_name='material')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sepulki.size', verbose_name='size')),
            ],
            options={
                'verbose_name': 'order',
                'verbose_name_plural': 'orders',
            },
        ),
        migrations.CreateModel(
            name='OrderReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solution', models.CharField(blank=True, choices=[('money', 'return money'), ('order', 'crete new order')], default='', help_text='Order returning solution, must be specified by the manager.', max_length=15, verbose_name='solution')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified date')),
                ('new_order', models.OneToOneField(default=None, help_text='If the manager solution is `order`, then create new order, which will be send to the client.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='returned_to_client', to='sepulki.order', verbose_name='new order for user')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sepulki.order', verbose_name='returned order')),
            ],
        ),
        migrations.CreateModel(
            name='PreparedPropertiesSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', max_length=250, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, help_text='If the property is inactive, then user can not to create sepulka with it.', verbose_name='is active')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sepulki.color', verbose_name='color')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sepulki.material', verbose_name='material')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sepulki.size', verbose_name='size')),
            ],
            options={
                'verbose_name': 'prepared properties set',
                'verbose_name_plural': 'prepared properties sets',
            },
        ),
    ]
